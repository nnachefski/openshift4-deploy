---

- name: Check for OpenShift installer
  stat:
    path: /usr/local/bin/openshift-install
  register: r_check_openshift_installer

- name: Create temporary download directory
  tempfile:
    state: directory
  register: r_create_openshift_temp_download_dir
  when: not r_check_openshift_installer.stat.exists

- name: Update URL if using nightlies
  set_fact:
    openshift_binaries_base_url: http://mirror.openshift.com/pub/openshift-v4/clients/ocp-dev-preview
  when: '"nightly" in openshift_version'

- name: Install OpenShift installer and client
  block:
    - name: Download and unarchive OpenShift installer
      unarchive:
        src: "{{ openshift_binaries_base_url }}/{{ openshift_version }}/openshift-install-linux-{{ openshift_version }}.tar.gz"
        dest: "{{ r_create_openshift_temp_download_dir.path }}"
        remote_src: yes

    - name: Copy OpenShift installer binary
      copy:
        src: "{{ r_create_openshift_temp_download_dir.path }}/openshift-install"
        dest: /usr/local/bin
        remote_src: yes
        owner: root
        group: root
        mode: 0755
      become: yes

    - name: Download and unarchive OpenShift client
      unarchive:
        src: "{{ openshift_binaries_base_url }}/{{ openshift_version }}/openshift-client-linux-{{ openshift_version }}.tar.gz"
        dest: "{{ r_create_openshift_temp_download_dir.path }}"
        remote_src: yes

    - name: Copy OpenShift client binaries
      copy:
        src: "{{ r_create_openshift_temp_download_dir.path }}/{{ item }}"
        dest: /usr/local/bin
        remote_src: yes
        owner: root
        group: root
        mode: 0755
      become: yes
      loop:
        - oc
        - kubectl
  always:
    - name: Cleanup temporary download directory
      file:
        path: "{{ r_create_openshift_temp_download_dir.path }}"
        state: absent
  when: not r_check_openshift_installer.stat.exists
